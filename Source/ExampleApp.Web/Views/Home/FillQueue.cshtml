@model ExampleApp.Web.Models.FillQueueCommandModel

<form id="FillQueueForm">
    @Html.EditorForModel()
    <button id="StartFillingQueueButton" type="button">Start</button>
</form>

<script type="text/javascript">
    function FillQueue() {
        var fillQueueUrl = '@Url.HttpRouteUrl("FillQueue", new { queueName = ViewBag.QueueName })';
        var payload = $('#FillQueueForm').serialize();
        $.post(fillQueueUrl, payload)
            .done(StartFillQueueSucceeded)
            .fail(StartFillQueueFailed)
            .always(StartFillQueueCompleted);

        StartFillQueueStarted();
    }

    // Called when the user initiates a fill queue AJAX request.
    function StartFillQueueStarted() {
        // Disable the button so it cannot be double clicked, or more.
        $('#StartFillingQueueButton').prop('disabled', true);

        $('#AjaxStatus').text('STARTED');
        $('#AjaxStatusMessage').text('Request submitted, awaiting a response from the server.');
    }

    function StartFillQueueSucceeded() {
        $('#AjaxResult').text('SUCCEEDED');
        $('#AjaxStatusMessage').text('Request accepted by server, the queue is now being filled...');

        // Start polling for completion...
        setTimeout(PollFillStatus, 500);
    }

    function StartFillQueueFailed(response) {
        $('#AjaxResult').text('FAILED');
        $('#AjaxStatusMessage').text(response.responseText);
    }

    function StartFillQueueCompleted() {
        $('#AjaxStatus').text('COMPLETED');
    }

    function PollFillStatus() {
        var fillStatusUrl = '@Url.HttpRouteUrl("GetFillQueueStatus", new { queueName = ViewBag.QueueName })';

        $.getJSON(fillStatusUrl)
            .done(UpdateFillStatus)
            .fail(UpdateFillStatusFailed)
            .always(UpdateFillStatusCompleted);

        GetFillQueueStatusStarted();
    }

    function GetFillQueueStatusStarted() {
        $('#AjaxStatus').text('STARTED');
        $('#AjaxStatusMessage').text('Request submitted, awaiting a response from the server.');
    }

    function UpdateFillStatus(fillOperation) {
        switch (fillOperation.Status) {
            case 1: // Running
                $('#StartFillingQueueButton').text('Filling...');

                // Check again later...
                setTimeout(PollFillStatus, 500);

                break;
            case 2: // Finished
                // Re-enable the fill button.
                $('#StartFillingQueueButton')
                    .text('Start')
                    .prop('disabled', false);

                break;
            default:
                alert(
                    'Invalid fill operation status: ' + fillOperation.Status
                );

                break;
        }
    }

    function UpdateFillStatusFailed(response) {
        $('#AjaxResult').text('FAILED');
        $('#AjaxStatusMessage').text(response.responseText);

        alert(response.responseText);
    }

    function UpdateFillStatusCompleted() {
        $('#AjaxStatus').text('COMPLETED');
    }

    $(function () {
        // Tie the button to the function.
        $('#StartFillingQueueButton').click(FillQueue);
    });
</script>
